#!/usr/bin/env python

import os
import sipconfig
import PyQt4.pyqtconfig as pyqtconfig
import sys
import getopt
import glob

opt_static=0
opt_debug=0

class QVariantTestModuleMakefile(pyqtconfig.QtCoreModuleMakefile):
    def __init__(self, *args, **kw):
        kw["qt"] = ["QtCore"]
        apply(pyqtconfig.QtCoreModuleMakefile.__init__, (self, ) + args, kw)

def doit():
	global opt_static
	global opt_debug
	# The name of the SIP build file generated by SIP and used by the build
	# system.
	build_file = "qvarianttest.sbf"

	# Get the PyQt configuration information.
	config = pyqtconfig.Configuration()
	config.pyqt_modules = ['QtCore']


	cmd = " ".join([config.sip_bin, "-c", "sipQVariantTest", "-b", "sipQVariantTest/"+build_file, "-I", config.pyqt_sip_dir, config.pyqt_sip_flags, "qvarianttest.sip"])
	ret = os.system(cmd)
	
	if ret:
		sys.exit(ret%255)

	makefile = QVariantTestModuleMakefile(
		configuration=config,
		build_file=build_file,
		static=opt_static,
		debug=opt_debug,
		dir="sipQVariantTest"
	)
	
	sipconfig.ParentMakefile(
		configuration=config,
		subdirs=["sipQVariantTest"]
	).generate()

	# Generate the Makefile itself.
	makefile.generate()

def usage(rcode = 2):
    """Display a usage message and exit.

    rcode is the return code passed back to the calling process.
    """
    print "Usage:"
    print "    python configure.py [-k]"
    print "where:"
    print "  -h      display this help message"
    print "  -k      build the PyQt modules as static libraries"
    sys.exit(rcode)

def main(argv):
	"""Create the configuration module module.

	argv is the list of command line arguments.
	"""

	# Parse the command line.
	try:
		optlist, args = getopt.getopt(argv[1:], "khu")
	except getopt.GetoptError:
		usage()

	global opt_static
	global opt_debug
	
	for opt, arg in optlist:
		if opt == "-h":
			usage(0)
		elif opt == "-k":
			opt_static = 1
		elif opt == "-u":
			opt_debug = 1
	doit()

if __name__ == "__main__":
	main(sys.argv)

